
/*
 * This file is part of Sling Samples
 * Copyright (c) 2016-2021 J42 Pte Ltd
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import jk.fs
import jk.template

class:

func main(args as array<string>) as int #main
{
	if sizeof args < 1 {
		println "Not enough arguments: " .. String.forInteger(sizeof args)
		return 1
	}
	var ff = File.forPath(args[0])
	var cc = ff.getContentsString("UTF-8")
	if not cc {
		println "Failed to read file: " .. args[0]
		return 1
	}
	var fs = new vector<File>
	fs += ff.getParent()
	var tt = TextTemplate.forHTMLString(cc, fs)
	if not tt {
		println "Failed to process HTML template: " .. args[0]
		return 1
	}
	var rr = tt.execute(null, null)
	if not rr {
		println "Failed to execute HTML template: " .. args[0]
		return 1
	}
	println rr
	return 0
}
