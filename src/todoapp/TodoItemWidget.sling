
/*
 * This file is part of Sling Samples
 * Copyright (c) 2016-2021 J42 Pte Ltd
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class #widget:

ui HorizontalBoxWidget
{
	CheckBoxWidget chk {
		checkHandler = func {
			onUpdateItem()
		}
	}
	LabelWidget text : 1.0 {
	}
}

ctor(ctx as GuiApplicationContext)
{
	base(ctx)
	forceCreateWidget()
}

var data as DynamicMap
var widgetOnUpdateHandler as function

func initializeWidget override
{
	base.initializeWidget()
	Widget.setWidgetLongClickHandler(this, func {
		onDeleteItem()
	})
}

func setWidgetData(value as DynamicMap) as this
{
	assert value
	data = value
	text.setWidgetText(value.getString("title"))
	return this
}

func setWidgetOnUpdateHandler(handler as function) as this
{
	widgetOnUpdateHandler = handler
	return this
}

func onUpdateItem
{
	var ctx final = context
	ctx.showConfirmDialog("Confirmation", "Are you sure you want this to mark as done?", func {
		data.set("status", Todo.DONE)
		DataManager.updateTodo(data, func(success as bool) {
			assert success:
				ctx.showErrorDialog("Failed to update item")
			ctx.showMessageDialog("Success", "Item has been updated", func {
				if widgetOnUpdateHandler:
					widgetOnUpdateHandler()
			})
		})
	}, null)
}

func onDeleteItem
{
	var ctx final = context
	ctx.showConfirmDialog("Confirmation", "Are you sure you want to delete this item?", func {
		DataManager.deleteTodo(data, func(success as bool) {
			assert success:
				ctx.showErrorDialog("Failed to update item")
			ctx.showMessageDialog("Success", "Item has been deleted", func {
				if widgetOnUpdateHandler:
					widgetOnUpdateHandler()
			})
		})
	}, null)
}
