
/*
 * This file is part of Sling Samples
 * Copyright (c) 2016-2021 J42 Pte Ltd
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class is TitledWidget #widget:

ui VerticalBoxWidget
{
	spacing = context.getHeightValue("2000um")
	margin = context.getHeightValue("2000um")
	TextInputWidget title {
		placeholder = "Enter todo title"
		padding = context.getHeightValue("1000um")
		backgroundColor = Color.white()
	}
	HorizontalBoxWidget {
		spacing = context.getHeightValue("1000um")
		TextButtonWidget btnCancel : 1.0 {
			text = "Cancel"
			padding = context.getHeightValue("1000um")
			backgroundColor = Color.instance("#D91E18")
			clickHandler = func {
				onCancelClicked()
			}
		}
		TextButtonWidget btnSave : 1.0 {
			text = "Save"
			padding = context.getHeightValue("1000um")
			backgroundColor = Color.instance("#444444")
			clickHandler = func {
				onSaveClicked()
			}
		}
	}
}

func getWidgetTitle as string:
	return "Add Item"

func onCancelClicked:
	NavigationWidget.popFromContainer(this)

func onSaveClicked
{
	var ctx final = context
	var thisWidget final = this
	var v = new DynamicMap()
	v.set("title", title.getWidgetText())
	DataManager.addTodo(v, func(v as bool) {
		assert v:
			ctx.showErrorDialog("Failed to save item")
		ctx.showMessageDialog("Success", "Item has been added to the database.", func {
			NavigationWidget.popFromContainer(thisWidget)
		})
	})
}
