
/*
 * This file is part of Sling Samples
 * Copyright (c) 2016-2021 J42 Pte Ltd
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class is ContainerWidget #widget #main:

ctor(ctx as GuiApplicationContext):
	base(ctx)

func initializeWidget override
{
	base.initializeWidget()
	addWidget(new LoginWidget(context))
}

func onWidgetHeightChanged(height as int #notLiteral) override
{
	base.onWidgetHeightChanged(height)
	foreach child in Widget.getChildren(this):
		Widget.resizeHeight(child, height)
}

func computeWidgetLayout(widthConstraint as int #notLiteral) override
{
	var wc = -1
	if widthConstraint >= 0:
		wc = widthConstraint
	var c = Widget.getChildren(this)
	var s = Vector.getSize(c)
	for(var i = 0; i < s; i++) {
		var w = Vector.get(c, i)
		if not w:
			continue
		if i == s-2 {
			Widget.layout(w, wc)
		}
	}
	Widget.setLayoutSize(this, wc, 0)
}
