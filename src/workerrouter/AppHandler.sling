
/*
 * This file is part of Sling Samples
 * Copyright (c) 2016-2021 J42 Pte Ltd
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import jk.http.worker

class is HTTPWorkerRouter:

func initRoutes override
{
	// The following maps to /supertest
	addRoute("GET", "/supertest", func(req as HTTPWorkerRequest, resp as HTTPWorkerResponse, vars as DynamicMap) {
		resp.setResponseText("Super Testing Indeed")
	})
	// The following maps to /xupload POST method
	addRoute("POST", "/xupload", func(req as HTTPWorkerRequest, resp as HTTPWorkerResponse, vars as DynamicMap) {
		resp.setResponseText("xupload: NOT IMPLEMENTED")
	})
	// The following maps to /submap
	addRoute("GET", "/submap", func(req as HTTPWorkerRequest, resp as HTTPWorkerResponse, vars as DynamicMap) {
		resp.setResponseText("THIS IS SUBMAP!")
	})
	// The following maps the URLS under /submap
	addRoute("GET", "/submap/", func(req as HTTPWorkerRequest, resp as HTTPWorkerResponse, vars as DynamicMap) {
		// This ALSO maps to /submap (but the entry
		// above takes precedence. If you comment out the one above,
		// then the following will work)
		resp.setResponseText("This is the ALTERNATIVE SUBMAP!")
	})
	addRoute("GET", "/submap/test1", func(req as HTTPWorkerRequest, resp as HTTPWorkerResponse, vars as DynamicMap) {
		// This maps to /submap/test1
		resp.setResponseText("submap -> test1")
	})
	addRoute("GET", "/submap/test2", func(req as HTTPWorkerRequest, resp as HTTPWorkerResponse, vars as DynamicMap) {
		// This maps to /submap/test2
		resp.setResponseText("submap -> test2")
	})
	addRoute("GET", "test2/:resource", func(req as HTTPWorkerRequest, resp as HTTPWorkerResponse, vars as DynamicMap) {
		// This maps to /submap/test2/* (any one level FROM
		// test2, eg. /submap/test2/asdf, /submap/test2/hello, etc.
		resp.setResponseText("submap -> test2/: " .. vars.getString("resource"))
	})
}
